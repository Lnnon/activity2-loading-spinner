{"ast":null,"code":"// usersSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: {\n    data: [],\n    status: 'idle'\n  },\n  reducers: {\n    addUser: (state, action) => {\n      state.data.push({\n        id: Date.now(),\n        ...action.payload\n      });\n    },\n    deleteUser: (state, action) => {\n      state.data = state.data.filter(user => user.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    }).addCase(fetchUsers.rejected, state => {\n      state.status = 'failed';\n    });\n  }\n});\nexport const {\n  addUser,\n  deleteUser\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchUsers","response","get","data","usersSlice","name","initialState","status","reducers","addUser","state","action","push","id","Date","now","payload","deleteUser","filter","user","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["D:/This PC/Downloads/Spinner-main/src/features/users/usersSlice.jsx"],"sourcesContent":["// usersSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\r\n  const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n  return response.data;\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState: { data: [], status: 'idle' },\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      state.data.push({ id: Date.now(), ...action.payload });\r\n    },\r\n    deleteUser: (state, action) => {\r\n      state.data = state.data.filter(user => user.id !== action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.data = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state) => {\r\n        state.status = 'failed';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { addUser, deleteUser } = usersSlice.actions;\r\nexport default usersSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,4CAA4C,CAAC;EAC9E,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IAAEH,IAAI,EAAE,EAAE;IAAEI,MAAM,EAAE;EAAO,CAAC;EAC1CC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACP,IAAI,CAACS,IAAI,CAAC;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE,GAAGJ,MAAM,CAACK;MAAQ,CAAC,CAAC;IACxD,CAAC;IACDC,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACP,IAAI,GAAGO,KAAK,CAACP,IAAI,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKF,MAAM,CAACK,OAAO,CAAC;IACpE;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACtB,UAAU,CAACuB,OAAO,EAAGb,KAAK,IAAK;MACtCA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDe,OAAO,CAACtB,UAAU,CAACwB,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACK,OAAO;IAC7B,CAAC,CAAC,CACDM,OAAO,CAACtB,UAAU,CAACyB,QAAQ,EAAGf,KAAK,IAAK;MACvCA,KAAK,CAACH,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,OAAO;EAAEQ;AAAW,CAAC,GAAGb,UAAU,CAACsB,OAAO;AACzD,eAAetB,UAAU,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}